//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCModel.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TotalBikePortalsEntities : DbContext
    {
        public TotalBikePortalsEntities()
            : base("name=TotalBikePortalsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<CommodityType> CommodityTypes { get; set; }
        public virtual DbSet<CustomerType> CustomerTypes { get; set; }
        public virtual DbSet<GoodsReceipt> GoodsReceipts { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<PaymentTerm> PaymentTerms { get; set; }
        public virtual DbSet<PriceTerm> PriceTerms { get; set; }
        public virtual DbSet<PurchaseInvoice> PurchaseInvoices { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<Quotation> Quotations { get; set; }
        public virtual DbSet<SalesInvoice> SalesInvoices { get; set; }
        public virtual DbSet<SalesInvoiceType> SalesInvoiceTypes { get; set; }
        public virtual DbSet<ServiceContract> ServiceContracts { get; set; }
        public virtual DbSet<ServiceContractType> ServiceContractTypes { get; set; }
        public virtual DbSet<StockTransferDetail> StockTransferDetails { get; set; }
        public virtual DbSet<StockTransfer> StockTransfers { get; set; }
        public virtual DbSet<TransferOrderDetail> TransferOrderDetails { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<OrganizationalUnit> OrganizationalUnits { get; set; }
        public virtual DbSet<OrganizationalUnitUser> OrganizationalUnitUsers { get; set; }
        public virtual DbSet<CommodityCategory> CommodityCategories { get; set; }
        public virtual DbSet<CustomerCategory> CustomerCategories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<EntireTerritory> EntireTerritories { get; set; }
        public virtual DbSet<Territory> Territories { get; set; }
        public virtual DbSet<Commodity> Commodities { get; set; }
        public virtual DbSet<GoodsReceiptDetail> GoodsReceiptDetails { get; set; }
        public virtual DbSet<PurchaseInvoiceDetail> PurchaseInvoiceDetails { get; set; }
        public virtual DbSet<PurchaseOrderDetail> PurchaseOrderDetails { get; set; }
        public virtual DbSet<SalesInvoiceDetail> SalesInvoiceDetails { get; set; }
        public virtual DbSet<QuotationDetail> QuotationDetails { get; set; }
        public virtual DbSet<Inventory_30_06_33> Inventory_30_06_33 { get; set; }
        public virtual DbSet<AccessControl> AccessControls { get; set; }
        public virtual DbSet<RAWDATA_07_2015> RAWDATA_07_2015 { get; set; }
        public virtual DbSet<VCNB_T07> VCNB_T07 { get; set; }
        public virtual DbSet<TransferOrder> TransferOrders { get; set; }
    
        public virtual ObjectResult<PurchaseInvoiceViewDetail> GetPurchaseInvoiceViewDetails(Nullable<int> purchaseInvoiceID, Nullable<int> purchaseOrderID, Nullable<int> supplierID, Nullable<bool> isReadonly)
        {
            var purchaseInvoiceIDParameter = purchaseInvoiceID.HasValue ?
                new ObjectParameter("PurchaseInvoiceID", purchaseInvoiceID) :
                new ObjectParameter("PurchaseInvoiceID", typeof(int));
    
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var isReadonlyParameter = isReadonly.HasValue ?
                new ObjectParameter("IsReadonly", isReadonly) :
                new ObjectParameter("IsReadonly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseInvoiceViewDetail>("GetPurchaseInvoiceViewDetails", purchaseInvoiceIDParameter, purchaseOrderIDParameter, supplierIDParameter, isReadonlyParameter);
        }
    
        public virtual ObjectResult<PurchaseInvoiceGetPurchaseOrder> PurchaseInvoiceGetPurchaseOrders(Nullable<int> locationID, Nullable<int> purchaseInvoiceID, string purchaseOrderReference)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var purchaseInvoiceIDParameter = purchaseInvoiceID.HasValue ?
                new ObjectParameter("PurchaseInvoiceID", purchaseInvoiceID) :
                new ObjectParameter("PurchaseInvoiceID", typeof(int));
    
            var purchaseOrderReferenceParameter = purchaseOrderReference != null ?
                new ObjectParameter("PurchaseOrderReference", purchaseOrderReference) :
                new ObjectParameter("PurchaseOrderReference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseInvoiceGetPurchaseOrder>("PurchaseInvoiceGetPurchaseOrders", locationIDParameter, purchaseInvoiceIDParameter, purchaseOrderReferenceParameter);
        }
    
        public virtual ObjectResult<PurchaseInvoiceGetSupplier> PurchaseInvoiceGetSuppliers(Nullable<int> locationID, Nullable<int> purchaseInvoiceID, string supplierName)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var purchaseInvoiceIDParameter = purchaseInvoiceID.HasValue ?
                new ObjectParameter("PurchaseInvoiceID", purchaseInvoiceID) :
                new ObjectParameter("PurchaseInvoiceID", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseInvoiceGetSupplier>("PurchaseInvoiceGetSuppliers", locationIDParameter, purchaseInvoiceIDParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GoodsReceiptViewDetail> GetGoodsReceiptViewDetails(Nullable<int> goodsReceiptID, Nullable<int> goodsReceiptTypeID, Nullable<int> voucherID, Nullable<bool> isReadonly)
        {
            var goodsReceiptIDParameter = goodsReceiptID.HasValue ?
                new ObjectParameter("GoodsReceiptID", goodsReceiptID) :
                new ObjectParameter("GoodsReceiptID", typeof(int));
    
            var goodsReceiptTypeIDParameter = goodsReceiptTypeID.HasValue ?
                new ObjectParameter("GoodsReceiptTypeID", goodsReceiptTypeID) :
                new ObjectParameter("GoodsReceiptTypeID", typeof(int));
    
            var voucherIDParameter = voucherID.HasValue ?
                new ObjectParameter("VoucherID", voucherID) :
                new ObjectParameter("VoucherID", typeof(int));
    
            var isReadonlyParameter = isReadonly.HasValue ?
                new ObjectParameter("IsReadonly", isReadonly) :
                new ObjectParameter("IsReadonly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GoodsReceiptViewDetail>("GetGoodsReceiptViewDetails", goodsReceiptIDParameter, goodsReceiptTypeIDParameter, voucherIDParameter, isReadonlyParameter);
        }
    
        public virtual ObjectResult<GoodsReceiptGetPurchaseInvoice> GoodsReceiptGetPurchaseInvoices(Nullable<int> locationID, Nullable<int> goodsReceiptID, string purchaseInvoiceReference)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var goodsReceiptIDParameter = goodsReceiptID.HasValue ?
                new ObjectParameter("GoodsReceiptID", goodsReceiptID) :
                new ObjectParameter("GoodsReceiptID", typeof(int));
    
            var purchaseInvoiceReferenceParameter = purchaseInvoiceReference != null ?
                new ObjectParameter("PurchaseInvoiceReference", purchaseInvoiceReference) :
                new ObjectParameter("PurchaseInvoiceReference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GoodsReceiptGetPurchaseInvoice>("GoodsReceiptGetPurchaseInvoices", locationIDParameter, goodsReceiptIDParameter, purchaseInvoiceReferenceParameter);
        }
    
        public virtual ObjectResult<VehiclesInvoiceViewDetail> GetVehiclesInvoiceViewDetails(Nullable<int> salesInvoiceID)
        {
            var salesInvoiceIDParameter = salesInvoiceID.HasValue ?
                new ObjectParameter("SalesInvoiceID", salesInvoiceID) :
                new ObjectParameter("SalesInvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehiclesInvoiceViewDetail>("GetVehiclesInvoiceViewDetails", salesInvoiceIDParameter);
        }
    
        public virtual int GoodsReceiptSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GoodsReceiptSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual int PurchaseInvoiceSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseInvoiceSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual int VehiclesInvoiceSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VehiclesInvoiceSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual ObjectResult<CommoditiesInGoodsReceipt> GetCommoditiesInGoodsReceipts(Nullable<int> locationID, string searchText, Nullable<int> salesInvoiceID, Nullable<int> stockTransferID, Nullable<int> stockAdjustID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var salesInvoiceIDParameter = salesInvoiceID.HasValue ?
                new ObjectParameter("SalesInvoiceID", salesInvoiceID) :
                new ObjectParameter("SalesInvoiceID", typeof(int));
    
            var stockTransferIDParameter = stockTransferID.HasValue ?
                new ObjectParameter("StockTransferID", stockTransferID) :
                new ObjectParameter("StockTransferID", typeof(int));
    
            var stockAdjustIDParameter = stockAdjustID.HasValue ?
                new ObjectParameter("StockAdjustID", stockAdjustID) :
                new ObjectParameter("StockAdjustID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommoditiesInGoodsReceipt>("GetCommoditiesInGoodsReceipts", locationIDParameter, searchTextParameter, salesInvoiceIDParameter, stockTransferIDParameter, stockAdjustIDParameter);
        }
    
        public virtual ObjectResult<PartsInvoiceViewDetail> GetPartsInvoiceViewDetails(Nullable<int> salesInvoiceID)
        {
            var salesInvoiceIDParameter = salesInvoiceID.HasValue ?
                new ObjectParameter("SalesInvoiceID", salesInvoiceID) :
                new ObjectParameter("SalesInvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartsInvoiceViewDetail>("GetPartsInvoiceViewDetails", salesInvoiceIDParameter);
        }
    
        public virtual int PartsInvoiceSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartsInvoiceSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual ObjectResult<ServiceContractGetVehiclesInvoice> ServiceContractGetVehiclesInvoices(Nullable<int> locationID, string searchText, Nullable<int> salesInvoiceID, Nullable<int> serviceContractID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var salesInvoiceIDParameter = salesInvoiceID.HasValue ?
                new ObjectParameter("SalesInvoiceID", salesInvoiceID) :
                new ObjectParameter("SalesInvoiceID", typeof(int));
    
            var serviceContractIDParameter = serviceContractID.HasValue ?
                new ObjectParameter("ServiceContractID", serviceContractID) :
                new ObjectParameter("ServiceContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceContractGetVehiclesInvoice>("ServiceContractGetVehiclesInvoices", locationIDParameter, searchTextParameter, salesInvoiceIDParameter, serviceContractIDParameter);
        }
    
        public virtual int ServiceContractSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServiceContractSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual ObjectResult<CommoditiesInWarehouse> GetCommoditiesInWarehouses(Nullable<int> locationID, Nullable<System.DateTime> entryDate, string searchText, Nullable<int> salesInvoiceID, Nullable<int> stockTransferID, Nullable<int> stockAdjustID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var salesInvoiceIDParameter = salesInvoiceID.HasValue ?
                new ObjectParameter("SalesInvoiceID", salesInvoiceID) :
                new ObjectParameter("SalesInvoiceID", typeof(int));
    
            var stockTransferIDParameter = stockTransferID.HasValue ?
                new ObjectParameter("StockTransferID", stockTransferID) :
                new ObjectParameter("StockTransferID", typeof(int));
    
            var stockAdjustIDParameter = stockAdjustID.HasValue ?
                new ObjectParameter("StockAdjustID", stockAdjustID) :
                new ObjectParameter("StockAdjustID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommoditiesInWarehouse>("GetCommoditiesInWarehouses", locationIDParameter, entryDateParameter, searchTextParameter, salesInvoiceIDParameter, stockTransferIDParameter, stockAdjustIDParameter);
        }
    
        public virtual ObjectResult<WarehouseJournal> WarehouseJournal(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string warehouseIDList, string commodityIDList, Nullable<bool> isFullJournal, Nullable<bool> isAmountIncluded)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var warehouseIDListParameter = warehouseIDList != null ?
                new ObjectParameter("WarehouseIDList", warehouseIDList) :
                new ObjectParameter("WarehouseIDList", typeof(string));
    
            var commodityIDListParameter = commodityIDList != null ?
                new ObjectParameter("CommodityIDList", commodityIDList) :
                new ObjectParameter("CommodityIDList", typeof(string));
    
            var isFullJournalParameter = isFullJournal.HasValue ?
                new ObjectParameter("isFullJournal", isFullJournal) :
                new ObjectParameter("isFullJournal", typeof(bool));
    
            var isAmountIncludedParameter = isAmountIncluded.HasValue ?
                new ObjectParameter("IsAmountIncluded", isAmountIncluded) :
                new ObjectParameter("IsAmountIncluded", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseJournal>("WarehouseJournal", fromDateParameter, toDateParameter, warehouseIDListParameter, commodityIDListParameter, isFullJournalParameter, isAmountIncludedParameter);
        }
    
        public virtual ObjectResult<RelatedPartsInvoiceValue> GetRelatedPartsInvoiceValue(Nullable<int> serviceInvoiceID)
        {
            var serviceInvoiceIDParameter = serviceInvoiceID.HasValue ?
                new ObjectParameter("ServiceInvoiceID", serviceInvoiceID) :
                new ObjectParameter("ServiceInvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RelatedPartsInvoiceValue>("GetRelatedPartsInvoiceValue", serviceInvoiceIDParameter);
        }
    
        public virtual ObjectResult<PartTransferViewDetail> GetPartTransferViewDetails(Nullable<int> stockTransferID)
        {
            var stockTransferIDParameter = stockTransferID.HasValue ?
                new ObjectParameter("StockTransferID", stockTransferID) :
                new ObjectParameter("StockTransferID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartTransferViewDetail>("GetPartTransferViewDetails", stockTransferIDParameter);
        }
    
        public virtual ObjectResult<VehicleTransferViewDetail> GetVehicleTransferViewDetails(Nullable<int> stockTransferID)
        {
            var stockTransferIDParameter = stockTransferID.HasValue ?
                new ObjectParameter("StockTransferID", stockTransferID) :
                new ObjectParameter("StockTransferID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicleTransferViewDetail>("GetVehicleTransferViewDetails", stockTransferIDParameter);
        }
    
        public virtual int PartTransferSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartTransferSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual int VehicleTransferSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VehicleTransferSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual ObjectResult<GoodsReceiptGetStockTransfer> GoodsReceiptGetStockTransfers(Nullable<int> locationID, Nullable<int> goodsReceiptID, string stockTransferReference)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var goodsReceiptIDParameter = goodsReceiptID.HasValue ?
                new ObjectParameter("GoodsReceiptID", goodsReceiptID) :
                new ObjectParameter("GoodsReceiptID", typeof(int));
    
            var stockTransferReferenceParameter = stockTransferReference != null ?
                new ObjectParameter("StockTransferReference", stockTransferReference) :
                new ObjectParameter("StockTransferReference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GoodsReceiptGetStockTransfer>("GoodsReceiptGetStockTransfers", locationIDParameter, goodsReceiptIDParameter, stockTransferReferenceParameter);
        }
    
        public virtual ObjectResult<AdditionalGoodsReceiptVoucherText> GetAdditionalGoodsReceiptVoucherText(Nullable<int> goodsReceiptTypeID, Nullable<int> voucherID)
        {
            var goodsReceiptTypeIDParameter = goodsReceiptTypeID.HasValue ?
                new ObjectParameter("GoodsReceiptTypeID", goodsReceiptTypeID) :
                new ObjectParameter("GoodsReceiptTypeID", typeof(int));
    
            var voucherIDParameter = voucherID.HasValue ?
                new ObjectParameter("VoucherID", voucherID) :
                new ObjectParameter("VoucherID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdditionalGoodsReceiptVoucherText>("GetAdditionalGoodsReceiptVoucherText", goodsReceiptTypeIDParameter, voucherIDParameter);
        }
    
        public virtual int UpdateWarehouseBalance(Nullable<int> updateWarehouseBalanceOption, Nullable<int> goodsReceiptID, Nullable<int> salesInvoiceID, Nullable<int> stockTransferID)
        {
            var updateWarehouseBalanceOptionParameter = updateWarehouseBalanceOption.HasValue ?
                new ObjectParameter("UpdateWarehouseBalanceOption", updateWarehouseBalanceOption) :
                new ObjectParameter("UpdateWarehouseBalanceOption", typeof(int));
    
            var goodsReceiptIDParameter = goodsReceiptID.HasValue ?
                new ObjectParameter("GoodsReceiptID", goodsReceiptID) :
                new ObjectParameter("GoodsReceiptID", typeof(int));
    
            var salesInvoiceIDParameter = salesInvoiceID.HasValue ?
                new ObjectParameter("SalesInvoiceID", salesInvoiceID) :
                new ObjectParameter("SalesInvoiceID", typeof(int));
    
            var stockTransferIDParameter = stockTransferID.HasValue ?
                new ObjectParameter("StockTransferID", stockTransferID) :
                new ObjectParameter("StockTransferID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWarehouseBalance", updateWarehouseBalanceOptionParameter, goodsReceiptIDParameter, salesInvoiceIDParameter, stockTransferIDParameter);
        }
    
        public virtual ObjectResult<QuotationViewDetail> GetQuotationViewDetails(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuotationViewDetail>("GetQuotationViewDetails", quotationIDParameter);
        }
    
        public virtual int QuotationSaveRelative(Nullable<int> entityID, Nullable<int> saveRelativeOption)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var saveRelativeOptionParameter = saveRelativeOption.HasValue ?
                new ObjectParameter("SaveRelativeOption", saveRelativeOption) :
                new ObjectParameter("SaveRelativeOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QuotationSaveRelative", entityIDParameter, saveRelativeOptionParameter);
        }
    
        public virtual ObjectResult<PendingPartTransferOrder> GetPendingPartTransferOrders(Nullable<int> locationID, Nullable<int> transferOrderID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var transferOrderIDParameter = transferOrderID.HasValue ?
                new ObjectParameter("TransferOrderID", transferOrderID) :
                new ObjectParameter("TransferOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PendingPartTransferOrder>("GetPendingPartTransferOrders", locationIDParameter, transferOrderIDParameter);
        }
    
        public virtual ObjectResult<PendingVehicleTransferOrder> GetPendingVehicleTransferOrders(Nullable<int> locationID, Nullable<int> transferOrderID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var transferOrderIDParameter = transferOrderID.HasValue ?
                new ObjectParameter("TransferOrderID", transferOrderID) :
                new ObjectParameter("TransferOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PendingVehicleTransferOrder>("GetPendingVehicleTransferOrders", locationIDParameter, transferOrderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAccessLevel(Nullable<int> userID, Nullable<int> nMVNTaskID, Nullable<int> organizationalUnitID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var nMVNTaskIDParameter = nMVNTaskID.HasValue ?
                new ObjectParameter("NMVNTaskID", nMVNTaskID) :
                new ObjectParameter("NMVNTaskID", typeof(int));
    
            var organizationalUnitIDParameter = organizationalUnitID.HasValue ?
                new ObjectParameter("OrganizationalUnitID", organizationalUnitID) :
                new ObjectParameter("OrganizationalUnitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAccessLevel", userIDParameter, nMVNTaskIDParameter, organizationalUnitIDParameter);
        }
    
        [DbFunction("TotalBikePortalsEntities", "GetOverStockItems")]
        public virtual IQueryable<OverStockItem> GetOverStockItems(Nullable<System.DateTime> checkedDate, string warehouseIDList, string commodityIDList)
        {
            var checkedDateParameter = checkedDate.HasValue ?
                new ObjectParameter("CheckedDate", checkedDate) :
                new ObjectParameter("CheckedDate", typeof(System.DateTime));
    
            var warehouseIDListParameter = warehouseIDList != null ?
                new ObjectParameter("WarehouseIDList", warehouseIDList) :
                new ObjectParameter("WarehouseIDList", typeof(string));
    
            var commodityIDListParameter = commodityIDList != null ?
                new ObjectParameter("CommodityIDList", commodityIDList) :
                new ObjectParameter("CommodityIDList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OverStockItem>("[TotalBikePortalsEntities].[GetOverStockItems](@CheckedDate, @WarehouseIDList, @CommodityIDList)", checkedDateParameter, warehouseIDListParameter, commodityIDListParameter);
        }
    
        public virtual ObjectResult<ServiceContractResult> SearchServiceContracts(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceContractResult>("SearchServiceContracts", searchTextParameter);
        }
    
        public virtual ObjectResult<CommoditiesAvailable> GetCommoditiesAvailables(Nullable<int> locationID, Nullable<System.DateTime> entryDate, string searchText)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommoditiesAvailable>("GetCommoditiesAvailables", locationIDParameter, entryDateParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<string> GoodsReceiptEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GoodsReceiptEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> GoodsReceiptPostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GoodsReceiptPostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> PartsInvoiceEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PartsInvoiceEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> PartsInvoicePostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PartsInvoicePostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> PartTransferPostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PartTransferPostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> PurchaseInvoiceEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PurchaseInvoiceEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> PurchaseInvoicePostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PurchaseInvoicePostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> PurchaseOrderEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PurchaseOrderEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> QuotationEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("QuotationEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> QuotationPostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("QuotationPostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> ServiceContractPostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ServiceContractPostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> ServicesInvoiceEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ServicesInvoiceEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> ServicesInvoicePostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ServicesInvoicePostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> StockTransferEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("StockTransferEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> TransferOrderEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TransferOrderEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> VehiclesInvoiceEditable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VehiclesInvoiceEditable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> VehiclesInvoicePostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VehiclesInvoicePostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> VehicleTransferPostSaveValidate(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VehicleTransferPostSaveValidate", entityIDParameter);
        }
    
        public virtual ObjectResult<string> ServicesContractDeletable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ServicesContractDeletable", entityIDParameter);
        }
    
        public virtual ObjectResult<string> ServicesInvoiceDeletable(Nullable<int> entityID)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ServicesInvoiceDeletable", entityIDParameter);
        }
    
        public virtual ObjectResult<PartAvailable> GetPartAvailables(Nullable<int> locationID, Nullable<System.DateTime> entryDate, string searchText)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartAvailable>("GetPartAvailables", locationIDParameter, entryDateParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<PartTransferOrderViewDetail> GetPartTransferOrderViewDetails(Nullable<int> transferOrderID)
        {
            var transferOrderIDParameter = transferOrderID.HasValue ?
                new ObjectParameter("TransferOrderID", transferOrderID) :
                new ObjectParameter("TransferOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartTransferOrderViewDetail>("GetPartTransferOrderViewDetails", transferOrderIDParameter);
        }
    
        public virtual ObjectResult<VehicleAvailable> GetVehicleAvailables(Nullable<int> locationID, Nullable<System.DateTime> entryDate, string searchText)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicleAvailable>("GetVehicleAvailables", locationIDParameter, entryDateParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<VehicleTransferOrderViewDetail> GetVehicleTransferOrderViewDetails(Nullable<int> transferOrderID)
        {
            var transferOrderIDParameter = transferOrderID.HasValue ?
                new ObjectParameter("TransferOrderID", transferOrderID) :
                new ObjectParameter("TransferOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicleTransferOrderViewDetail>("GetVehicleTransferOrderViewDetails", transferOrderIDParameter);
        }
    }
}
